#==============================
#****vnpip/plutus images****
#==============================
FROM ubuntu:20.04 AS build

LABEL maintainer="VNPIPS Staking Team (ada.vnpips.com)"

#ARG DEBIAN_FRONTEND=noninteractive
ENV \
    ENV=/etc/profile \
#   LC_ALL=en_US.UTF-8 \
#   LANG=en_US.UTF-8 \
#   LANGUAGE=en_US.UTF-8  \
    TZ=Asia/Ho_Chi_Minh
    
# Configure tzdata
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Switch to root user : to run privileged command
# --- Usually you won't be needed it - Depends on base image
USER root
WORKDIR /

# Update and install the required packages
RUN apt-get update -y \
  && apt-get upgrade -y \
  && apt-get install -y \
     automake autoconf build-essential pkg-config \
     libffi-dev libgmp-dev libssl-dev libtinfo-dev \
     libsystemd-dev libncursesw5 libtool zlib1g-dev \
     make g++ tmux git jq wget curl zip unzip rsync  \
     cron nano sudo \
  && apt-get autoremove \
  && apt-get autoclean
  
# Build and install the IOHK fork of [libsodium].
RUN git clone https://github.com/input-output-hk/libsodium \
    && cd libsodium \
    && git checkout 66f017f1 \
    && ./autogen.sh \
    && ./configure \
    && make \
    && make install \
    && cd .. && rm -rf libsodium

# Install [GHC]
ADD addfile/ghc-version.txt ./
RUN GHCVERSION=$(cat ghc-version.txt) \
  && wget https://downloads.haskell.org/ghc/$GHCVERSION/ghc-$GHCVERSION-x86_64-deb9-linux.tar.xz \
  && tar -xf ghc-$GHCVERSION-x86_64-deb9-linux.tar.xz \
  && rm ghc-$GHCVERSION-x86_64-deb9-linux.tar.xz \
  && cd ghc-$GHCVERSION \
  && ./configure \
  && make install \
  && ghc --version \
  && cd .. \
  && rm -rf /ghc-$GHCVERSION

# Install [cabal]
ADD addfile/cabal-version.txt ./ 
RUN CBVERSION=$(cat cabal-version.txt) \
#  && wget https://downloads.haskell.org/~cabal/cabal-install-$CBVERSION/cabal-install-$CBVERSION-x86_64-unknown-linux.tar.xz \
#  && tar -xf cabal-install-$CBVERSION-x86_64-unknown-linux.tar.xz \
#  && rm cabal-install-$CBVERSION-x86_64-unknown-linux.tar.xz cabal.sig \
  && wget https://downloads.haskell.org/~cabal/cabal-install-$CBVERSION/cabal-install-$CBVERSION-x86_64-ubuntu-16.04.tar.xz \
  && tar -xf cabal-install-$CBVERSION-x86_64-ubuntu-16.04.tar.xz \
  && rm cabal-install-$CBVERSION-x86_64-ubuntu-16.04.tar.xz \
# && mv cabal ~/.cabal/bin/ \
  && mv cabal /usr/local/bin/ \
  && /usr/local/bin/cabal update \
  && /usr/local/bin/cabal --version \
  && cd ..

# SETUP NONEROOTUSER
ARG NONEROOTUSER=vnpip
RUN sudo mkdir -m 0755 /nix && sudo mkdir /etc/nix
RUN adduser --disabled-password --gecos '' $NONEROOTUSER \
    && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers \
    && adduser $NONEROOTUSER sudo \
    && chown -R $NONEROOTUSER:$NONEROOTUSER /home/$NONEROOTUSER/.* \
    && chown -R $NONEROOTUSER:$NONEROOTUSER /nix /etc/nix

# Run non-privileged command
USER $NONEROOTUSER
#WORKDIR /home/$NONEROOTUSER
  
# STEP ONE: INSTALL NIX
RUN sudo curl -sL https://nixos.org/nix/install | sh \
    && sudo ln -s /nix/var/nix/profiles/per-user/etc/profile.d/nix.sh /etc/profile.d/ \
    && . /home/$NONEROOTUSER/.nix-profile/etc/profile.d/nix.sh \
    && echo "export PATH=/nix/var/nix/profiles/per-user/$NONEROOTUSER/profile/bin:/nix/var/nix/profiles/per-user/$NONEROOTUSER/profile/sbin:/usr/local/bin:/usr/bin:/usr/sbin:/bin:/sbin:/home/$NONEROOTUSER/.cabal/bin"  >> ~/.bashrc 


# INSTALL DEPS  
#RUN /nix/var/nix/profiles/per-user/$NONEROOTUSER/profile/bin/nix-env -i python3 systemd libsodium tmux jq ncurses libtool autoconf git wget gnupg column less openssl vim \
#    && /nix/var/nix/profiles/per-user/$NONEROOTUSER/profile/bin/nix-channel --update \
#    && /nix/var/nix/profiles/per-user/$NONEROOTUSER/profile/bin/nix-env -u --always \
#    && /nix/var/nix/profiles/per-user/$NONEROOTUSER/profile/bin/nix-collect-garbage -d \
#    && sudo rm /nix/var/nix/profiles/per-user/$NONEROOTUSER/profile/bin/nix-*

# ADD NIX CONFIG
 ADD addfile/nix.conf /etc/nix

# STEP TWO: INSTALL HASKELL
RUN sudo apt-get install -y haskell-platform \
  && sudo apt-get update -y --fix-missing \
  && cabal update

# STEP THREE: INSTALL PLUTUS
RUN cd ~/ \
 && mkdir git && chmod 0755 git \
 && cd git \
 && git clone https://github.com/input-output-hk/plutus.git \
 && cd plutus/ \
 && /home/$NONEROOTUSER/.nix-profile/bin/nix build -f default.nix plutus.haskell.packages.plutus-core.components.library

# ADD SCRIPT
ADD addfile/banner.txt /home/$NONEROOTUSER/.scripts/
ADD addfile/downG.sh /home/$NONEROOTUSER/.scripts/
ADD addfile/entrypoint.sh /home/$NONEROOTUSER/

RUN sudo chown -R $NONEROOTUSER:$NONEROOTUSER /home/$NONEROOTUSER/.* \
    && sudo chmod a+x /home/$NONEROOTUSER/.scripts/*.sh /home/$NONEROOTUSER/entrypoint.sh
    
ENTRYPOINT ["/bin/bash"]
